kind: MLApp
metadata:
  name: tensorflow
spec:
  package_manager: "pip{{.python_version.value}}"
  packages:
    - names:
      {{- range $i, $value := .packages }}
      - "{{ $value }}"
      {{- end }}
      manager: "pip{{.python_version.value}}"
  tasks:
  - name: prepare-data
    resources:
    - name: upload
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 1
      allowFail: true
      {{- if eq .python_version.value "3" }}
      images:
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: "echo \"Uploading Data\";echo \"Done!!!\""
      workdir: "$DATA_DIR"
      volumes:
      - name: data
  - name: standalone
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: python hello.py
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 8Gi
      default_volume_mapping: true
  - name: parallel
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: "echo \"WORKER: $REPLICA_INDEX\";echo \"PSS: $PS_NODES\"; echo \"WORKERS: $WORKER_NODES\"; echo \"BUILD: $BUILD_ID\"; python hello.py"
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 4Gi
      port: 2222
      default_volume_mapping: true
    - name: ps
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: "echo \"PS: $REPLICA_INDEX\";echo \"PSS: $PS_NODES\"; echo \"WORKERS: $WORKER_NODES\"; echo \"BUILD: $BUILD_ID\"; python"
      args: hello.py
      workdir: "$SRC_DIR"
      port: 2222
      volumes:
      - name: src
      - name: code
      - name: training
  - name: export
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: "echo \"BUILD: $BUILD_ID\"; python hello.py"
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 4Gi
      default_volume_mapping: true
  - name: workflow
    resources:
    - name: tasks
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      allowFail: true
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: python run_tasks.py
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 1Gi
      default_volume_mapping: true
  uix:
  - name: jupyter
    displayName: Jupyter
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
    {{- end }}
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: http
    default_volume_mapping: true
  - name: tensorboard
    displayName: Tensorboard
    command: "tensorboard --logdir=$TRAINING_DIR"
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
    {{- end }}
    ports:
    - port: 6006
      targetPort: 6006
      protocol: TCP
      name: http
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    volumes:
    - name: training
  serving:
  - name: serving
    displayName: Serving
    {{- if .tf_serving }}
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
    {{- end }}
    command: tensorflow_model_server
    args: "--port={{ .serving_port }} --model_name=$TASK_NAME --model_base_path=$TRAINING_DIR/$BUILD_ID"
    {{- else }}
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
    {{- end }}
    workdir: "$SRC_DIR"
    command: python hello.py
    {{- end }}
    resources:
      accelerators:
        gpu: 0
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: {{ .serving_port }}
      targetPort: {{ .serving_port }}
      protocol: TCP
      name: http
    default_volume_mapping: true
  volumes:
  - isLibDir: false
    mountPath: /notebooks/training
    name: training
    clusterStorage: {{ .storage.value }}
    subPath: training
  - gitRepo:
      repository: https://github.com/kuberlab-catalog/tensorflow
    isLibDir: false
    mountPath: /notebooks/src
    name: src
    subPath: tensorflow/src
  - isLibDir: true
    mountPath: /notebooks/lib
    name: lib
    clusterStorage: {{ .storage.value }}
    subPath: lib
  - isLibDir: false
    mountPath: /notebooks/data
    name: data
    clusterStorage: {{ .storage.value }}
    subPath: {{ .data_path }}
  - isLibDir: false
    mountPath: /notebooks
    name: code
    subPath: code
    clusterStorage: {{ .storage.value }}
